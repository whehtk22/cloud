<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<bean id="customAccessDenied"
		class="org.whehtk22.security.CustomAccessDeniedHandler"></bean>
	 <!-- <bean id="customLoginSuccess"
		class="org.whehtk22.security.CustomLoginSuccessHandler"></bean> -->
	<!-- <bean id="customPasswordEncoder" class="org.whehtk22.security.CustomNoOpPasswordEncoder"></bean> -->
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService"
		class="org.whehtk22.security.CustomUserDetailsService"></bean>
<security:http auto-config="true" use-expressions="true">
<security:form-login login-page="/customLogin"  login-processing-url="/login"/>
<security:logout logout-url="/customLogout" invalidate-session="true"/>
<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
<security:logout logout-url="/customLogout" delete-cookies="remember-me,JSESSION_ID"/>
</security:http>
	<security:authentication-manager>
		<!-- <security:authentication-provider> <security:user-service>{}안에 패스워드 
			인코딩 처리 방식을 지정할 수 있다. <security:user name="member" password="{noop}member" 
			authorities="ROLE_MEMBER"/> <security:user name="admin" password="{noop}admin" 
			authorities="ROLE_ADMIN,ROLE_MEMBER"/> </security:user-service> <security:jdbc-user-service 
			data-source-ref="dataSource" users-by-username-query="select userid,userpw,enabled 
			from tbl_member where userid=?" authorities-by-username-query="select userid,auth 
			from tbl_member_auth where userid=?" /> <security:password-encoder ref="customPasswordEncoder"/> 
			</security:authentication-provider> -->
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder
				ref="bcryptPasswordEncoder" />
		
		</security:authentication-provider>
	</security:authentication-manager>
	<!-- <security:csrf disabled="true"/> -->
</beans>
